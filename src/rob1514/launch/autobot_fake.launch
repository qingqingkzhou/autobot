<launch>
    <!--
    <include file="$(find turtlebot_bringup) \">

    turtlebot_bringup minimal.launch
    </include>
    -->

    <!-- Turtlebot minimal_bringup -->
    <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
    <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
    <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
    <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
    <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
    <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>
    
    <param name="/use_sim_time" value="$(arg simulation)"/>

    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
        <arg name="base" value="$(arg base)" />
        <arg name="stacks" value="$(arg stacks)" />
        <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
        <arg name="base" value="$(arg base)" />
        <arg name="serialport" value="$(arg serialport)" />
    </include>
    <include unless="$(eval arg('battery') == 'None')" file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
        <arg name="battery" value="$(arg battery)" />
    </include>

    <!-- Turtlebot -->

    <!-- Autobot -->
    <node name="timer" pkg="rob1514" type="timer.py" args="fake-25-30" output="screen" />
    <node name="qr1_reporter" pkg="rob1514" type="qr1_reporter.py" args="fake" />
    <node name="nav_to_point_server" pkg="rob1514" type="navigate_to_point.py" args="fake" />
    <node name="point_feeder" pkg="rob1514" type="point_feeder.py" args="/home/qingqing/autobot/src/rob1514/launch/waypoints.json" />

    <!-- Basic auto-docking configuration for working with the default kobuki launcher (minimal.launch) -->
    <node pkg="nodelet" type="nodelet" name="dock_drive" args="load kobuki_auto_docking/AutoDockingNodelet mobile_base_nodelet_manager" output="screen">
        <rosparam file="$(find kobuki_auto_docking)/param/auto_docking.yaml" command="load"/>
        <remap from="dock_drive/odom" to="odom"/>
        <remap from="dock_drive/core" to="mobile_base/sensors/core"/>
        <remap from="dock_drive/dock_ir" to="mobile_base/sensors/dock_ir"/>
        <remap from="dock_drive/motor_power" to="mobile_base/commands/motor_power"/>
        <remap from="dock_drive/velocity" to="mobile_base/commands/velocity"/>
    </node>

    <!-- Autobot - activate auto dock -->
    <node name="activate_autodock" pkg="rob1514" type="activate_autodock.py" output="screen" />

</launch>
